import discord
import random
from discord.ext import commands
import os

intents = discord.Intents.default()
intents.message_content = True

bot= commands.Bot(command_prefix="/",intents=intents)

datos=["1. Plantar un √°rbol puede absorber hasta 22 kg de CO‚ÇÇ al a√±o", 
      "2. Reciclar una lata de aluminio ahorra suficiente energ√≠a para ver televisi√≥n durante 3 horas",
      "3. Ducharse durante 5 minutos consume menos agua que llenar una ba√±era",
      "4. Reducir el consumo de carne una vez a la semana puede salvar hasta 7.000 litros de agua",
      "5. Una bolsa de tela puede reemplazar m√°s de 700 bolsas de pl√°stico al a√±o",
      "6. Usar energ√≠a solar en casa puede reducir hasta un 80 porciento las emisiones de carbono dom√©sticas",
      "7. Ir en bici en vez de coche reduce m√°s de 200 gramos de CO‚ÇÇ por kil√≥metro",
      "8. Apagar tus dispositivos por la noche puede ahorrar hasta 10 porciento de energ√≠a el√©ctrica mensual",
      "9. Hacer tus propios productos de limpieza ecol√≥gicos evita qu√≠micos contaminantes",
      "10. Las abejas polinizan el 75 porciento de los cultivos alimentarios del mundo"]

url="https://www.ecologiaverde.com/ecologia/"

@bot.event
async def on_ready():
    print(f"iniciando{bot.user}")


@bot.command()
async def dato_curioso (ctx):
    dtos= random.choice(datos)
    await ctx.send (f"Aqu√≠ tienes tu dato curioso üòâ:{dtos}")

@bot.command()
async def imagen(ctx):
    listaimagenes= os.listdir("img")
    enviarimagen=random.choice(listaimagenes)
    with open(f'img\{enviarimagen}', 'rb') as f:
        picture = discord.File(f)
        await ctx.send(file=picture)

@bot.command()
async def aprender(ctx):
    await ctx.send(f"claro dirigite aqui: {url}")

@bot.command()
async def clasificacion(ctx,*,objeto:str):
    reciclable=["botellas", "latas", "peri√≥dicos", "cart√≥n", "revistas", "envases", "papel", "tetrapak", "pl√°sticos", "vidrio", "hojas", "cajas", "folletos", "tapas", "empaques", "tubos", "archivadores", "sobres", "bolsas", "libros", "latas de aluminio", "frascos de vidrio", "papel de oficina", "cajas de cereales", "tetrabriks", "bandejas de pl√°stico", "bolsas pl√°sticas", "tapitas de botellas", "papel kraft", "papel peri√≥dico", "cajas de zapatos", "botellas de detergente", "envases de yogur", "papel higi√©nico sin usar", "papel de envolver", "papel bond", "revistas viejas", "cat√°logos", "folletos publicitarios", "cartones de huevo", "cajas de pizza limpias", "papel de cuadernos", "libretas", "cuadernos", "archivos manila", "sobres manila", "tubos de cart√≥n", "bandejas de aluminio", "latas de conserva", "latas de refresco", "botellas de agua", "botellas de gaseosa", "botellas de jugo", "envases de productos de limpieza", "tarros de vidrio", "frascos de comida", "recipientes pl√°sticos", "botellas de aceite vac√≠as", "bolsas de supermercado reutilizables", "empaques de cart√≥n corrugado", "papel para imprimir usado por una cara", "hojas de examen usadas", "papel reciclado"]
    no_reciclables=["pa√±uelos usados", "papel higi√©nico sucio", "servilletas sucias", "papeles con grasa", "envases con restos de comida", "cajas de pizza sucias", "espejos rotos", "vidrios rotos", "cer√°mica", "vajilla rota", "bombillas", "focos", "tubos fluorescentes", "pa√±ales", "toallas sanitarias", "preservativos", "mascarillas", "guantes desechables", "jeringas", "hisopos", "cepillos de dientes", "esponjas", "colillas de cigarro", "cintas adhesivas", "cinta aislante", "cinta de embalar", "etiquetas pl√°sticas", "bolsas metalizadas", "papel carb√≥n", "papel plastificado", "fotos", "CDs", "DVDs", "disquetes", "juguetes rotos", "bol√≠grafos", "lapiceros vac√≠os", "marcadores", "brochas con pintura", "envases contaminados con qu√≠micos", "tubos de pasta dental", "tetrabriks sucios", "pl√°sticos termoformados sucios", "espuma flex", "unicel", "poliestireno", "envoltorios de golosinas", "envoltorios de snacks", "envoltorios metalizados", "ropa interior usada", "zapatos rotos", "alfombras", "cintas de video", "cintas de cassette", "celof√°n", "piedras", "tierra", "cenizas", "residuos de jardiner√≠a", "residuos org√°nicos cocidos", "excremento de mascotas", "basura de aspiradora", "pelos", "u√±as", "pl√°sticos combinados con metal o papel"]
 
    objeto=objeto.lower()
    
    if objeto in reciclable:
        await ctx.send(f"el {objeto}  es reciclable")
    elif objeto in  no_reciclables:
        await ctx.send(f"el {objeto } no es reciclabe")
    else :
        await ctx.send(f"desconosco informaci√≥n del {objeto}")

bot.run()
